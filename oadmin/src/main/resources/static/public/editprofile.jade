-@ val flash: Map[String, String]
-@ val editPrimaryEmail: Boolean = flash.get("editPrimaryEmail").exists(_ == "T")
-@ val error: Boolean = flash.get("error").exists(_ == "T")
-@ import val profile: schola.oadmin.domain.User
!!! 5
html(lang='en')
  head
    meta(charset='utf-8')
    meta(name='viewport' content='width=device-width, initial-scale=1.0')
    meta(name='description' content='')
    meta(name='author' content='Amadou Cisse')
    link(rel='shortcut icon' href={uri("/assets/ico/favicon.png")})
    title Schola - Edit profile
    link(href={uri("/assets/css/bootstrap.css")} rel='stylesheet')
    link(href={uri("/assets/css/editprofile.css")} rel='stylesheet')
  body
    .navbar.navbar-inverse.navbar-fixed-top(role='navigation')
      .container
        .navbar-header
          a.navbar-brand(href='/') Schola
        .collapse.navbar-collapse
          ul.nav.navbar-nav.navbar-right
            li.dropdown
              a.dropdown-toggle(href='#' data-toggle='dropdown')
                span.glyphicon.glyphicon-wrench
                span.caret
              ul.dropdown-menu
                li
                  a(href='/ChangePasswd') Change Password
            li
              a(href='/Logout')
                span.glyphicon.glyphicon-log-out  
    .container
      .page-header
        h3
          | Edit your profile                        
    .container
      form.form-editprofile(role='form' method='POST')
        ul#profiles.nav.nav-tabs
          li.active
            a(href='#' data-toggle='tab' data-tab='#basic') Basic
          li
            a(href='#' data-toggle='tab' data-tab='#addresses') Addresses
          li
            a(href='#' data-toggle='tab' data-tab='#contacts') Contacts
        fieldset
          #profiles_content.tab-content
            #basic.tab-pane.active
              .row
                .col-xs-6.col-md-3
                  a.thumbnail(href='#')
                    img.avatar(style='height: 180px; width: 100%; display: block;' title='Click to change your profile picture')              
                .col-xs-12.col-md-6
                  #name.form-group
                    input.form-control(type='file' id='f' name='f' class='hidden')
                    input.form-control(type='text' name='firstname' placeholder='First name' required autofocus) &nbsp; &nbsp;
                    input.form-control(type='text' name='lastname' placeholder='Last name' required)
              .form-group
                input.form-control(type='text' name='email' placeholder='Enter email' required)
              .form-group
                input.form-control(type='password' name='old_password' placeholder='Enter current password')
              .form-group
                input.form-control(type='password' name='new_password' placeholder='New Password')
              .form-group
                input.form-control(type='password' name='password_confirmation' placeholder='Confirm Password')                  
              #gender.form-group
                label Gender
                label.radio-inline
                  input(type='radio' name='gender' value='Male' checked)
                  | Male
                label.radio-inline
                  input(type='radio' name='gender' value='Female')
                  | Female              
            #addresses.tab-pane
              .container
                .page-header
                  h4
                    | Work
                .form-group
                  select#work-country.form-control(name='workAddress[country]' placeholder='Select country' required autofocus)
                .form-group
                  input#work-city.form-control(type='text' name='workAddress[city]' placeholder='City' required)
                .form-group
                  input.form-control(type='text' name='workAddress[postalCode]' placeholder='Postal Code' required)
                .form-group
                  textarea.form-control(name='workAddress[streetAddress]' placeholder='Address' required)
              .container
                .page-header
                  h4
                    | Home
                .form-group
                  select#home-country.form-control(name='homeAddress[country]' placeholder='Select country' required)
                .form-group
                  input#home-city.form-control(type='text' name='homeAddress[city]' placeholder='City' required)
                .form-group
                  input.form-control(type='text' name='homeAddress[postalCode]' placeholder='Postal Code' required)
                .form-group
                  textarea.form-control(name='homeAddress[streetAddress]' placeholder='Address' required)              
            #contacts.tab-pane 
              .container
                .page-header
                  h4
                    | Mobile
                .form-group
                  input.form-control(type='text' name='mobile[phoneNumber][primary]' placeholder='Enter mobile number')

              .container    
                .page-header
                  h4
                    | Work
                .form-group
                  input.form-control(type='text' name='work[phoneNumber]' placeholder='Enter phone number')
                .form-group
                  input.form-control(type='text' name='work[fax]' placeholder='Fax')
                .form-group
                  input.form-control(type='text' name='work[email]' placeholder='Email')             

              .container
                .page-header
                  h4
                    | Home
                .form-group
                  input.form-control(type='text' name='home[phoneNumer]' placeholder='Enter phone number')
                .form-group
                  input.form-control(type='text' name='home[fax]' placeholder='Fax')
                .form-group
                  input.form-control(type='text' name='home[email]' placeholder='Email')              
            br
            button.btn.btn-lg.btn-primary(type='submit') Save
            |&nbsp;
            a.btn.btn-lg.btn-default(href='/') Cancel         
    script(src={uri("/assets/javascripts/countries.js")} type='text/javascript' charset='utf-8')
    script(src={uri("/assets/javascripts/jquery.min.js")} type='text/javascript' charset='utf-8')
    script(src={uri("/assets/javascripts/bootstrap.js")})
    script(src={uri("/assets/javascripts/bootstrap3-typeahead.min.js")})
    script(src={uri("http://gd.geobytes.com/gd?after=-1&variables=GeobytesCountry,GeobytesCity,GeobytesIso2")})
    :javascript
      jQuery(function($){
          // construct countries list with selected country
          // Set up cities auto-complete

          var $avatar = $('.avatar')
             ,$f = $('#f');

          setTimeout(function(){
            var img = new Image;
            img.src = '/Avatar';

            img.onload = function(){
              $avatar[0].src = img.src;
            };
          }, 0);

          $avatar.parent().click(function(){
            $f.click();
          });

          $f.change(function(){
            var f = this.files[0];

            if(f) {

              var reader = new FileReader;
              reader.onload = function(evt) {
                // f.size
                $avatar[0].src = evt.target.result;
              };                            

              reader.readAsDataURL(f);
            }

            return false;
          });
          

          $('#profiles a').click(function (e) {
            var tab = $(this).attr('data-tab')
            e.preventDefault();
            $("#profiles_content .tab-pane").removeClass('active');
            $(tab).addClass('active');
          });

          var options = '';
          for(var i in countries) {
            options += '<option value="' + countries[i]['code'] + '"' + (countries[i]['code'] === sGeobytesIso2 ? ' selected' : '') + '>' + countries[i]['name'] + '</option>';
          }

          $('#addresses select').each(function(){
              $(this).html(options);
            });

           (function(){              
              $('#home-city').val(sGeobytesCity);
              $('#work-city').val(sGeobytesCity);
            }).call(this);

          $('#work-city').typeahead({
              source: function(q, process) {
                var filter = $("#work-country").val();
                filter = filter ? ("&filter=" + filter) : '';

                var url = "http://gd.geobytes.com/AutoCompleteCity?callback=?" + filter + "&q="+q;
                
                $.getJSON(url, process)
              }
            });

          $('#home-city').typeahead({
              source: function(q, process) {
                var filter = $("#home-country").val();
                filter = filter ? ("&filter=" + filter) : '';

                var url = "http://gd.geobytes.com/AutoCompleteCity?callback=?" + filter + "&q="+q;
                
                $.getJSON(url, process)
              }
            });          

        })