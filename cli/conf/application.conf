# This is the main configuration file for the application.
# ~~~~~

# Secret key
# ~~~~~
# The secret key is used to secure cryptographics functions.
# If you deploy your application to several instances be sure to use the same key!
application.secret="g7TpPq^a7Q=Og`>Wj`@NbiswMVGG7_p[:hA0Xxs?Eih8Ksnh_;aD;lt]g8<1Ka^w"

# The application languages
# ~~~~~
application.langs="en"

# Global object class
# ~~~~~
# Define the Global object class for this application.
# Default to Global in the root package.
application.global=misc.Global

# Router 
# ~~~~~
# Define the Router object to use for this application.
# This router will be looked up first when the application is starting up,
# so make sure this is the entry point. 
# Furthermore, it's assumed your route file is named properly. 
# So for an application router like `conf/my.application.Router`,
# you may need to define a router file `my.application.routes`.
# Default to Routes in the root package (and `conf/routes`)
# application.router=my.application.Routes

# authentication and access control server

# Database configuration
# ~~~~~ 
# You can declare as many datasources as you want.
# By convention, the default datasource is named `default`
#
# db.default.driver=org.h2.Driver
# db.default.url="jdbc:h2:mem:play"
# db.default.user=sa
# db.default.password=""
#
# You can expose this datasource via JNDI if needed (Useful for JPA)
# db.default.jndiName=DefaultDS

application.recaptcha.public-key = "6LeFSewSAAAAAFdPcZX6TzeAwP-xUB0vDyvLGpgm"
application.recaptcha.private-key = "6LeFSewSAAAAAOyuGTuHsAErPwwxU9ZOHjppLVpf"

# Evolutions
# ~~~~~
# You can disable evolutions if needed
# evolutionplugin=disabled

# Ebean configuration
# ~~~~~
# You can declare as many Ebean servers as you want.
# By convention, the default server is named `default`
#
# ebean.default="models.*"

akka.default-dispatcher.fork-join-executor.pool-size-max =64
akka.actor.debug.receive = on

# In this file you can override any option defined in the reference files.
# Copy in parts of the reference files and modify as you please.
 
akka {
 
  # Loggers to register at boot time (akka.event.Logging$DefaultLogger logs
  # to STDOUT) "akka.event.slf4j.Slf4jLogger"
  # loggers = ["akka.event.slf4j.Slf4jLogger"]
 
  # Log level used by the configured loggers (see "loggers") as soon
  # as they have been started; before that, see "stdout-loglevel"
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  # loglevel = DEBUG

  # Log level for the very basic logger activated during AkkaApplication startup
  # Options: OFF, ERROR, WARNING, INFO, DEBUG
  # stdout-loglevel = DEBUG
 
  actor {

    # default-dispatcher {
      # Throughput for default Dispatcher, set to 1 for as fair as possible
      # throughput = 10
    # }    

    deployment {
      
      /avatars/Avatars_upload-workers {
        
        router = random-pool
        
        nr-of-instances = 4
        
        pool-dispatcher {
          type = BalancingDispatcher
        }
      }
    }    
  }
}

# Logger
# ~~~~~
# You can also configure logback (http://logback.qos.ch/), by providing a logger.xml file in the conf directory .

# Root logger:
logger.root=ERROR

# Logger used by the framework:
logger.play=INFO

# Logger provided to your application:
logger.application=DEBUG

