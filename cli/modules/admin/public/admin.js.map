{"version":3,"file":"public/admin.js","sources":["js/admin.coffee","js/controllers/admin/Trash.coffee","js/controllers/admin/User.coffee","js/lib/admin/users.coffee","js/models/admin/DeletedUser.coffee","js/models/admin/User.coffee","js/models/admin/UserTag.coffee","node_modules/jade-brunch/node_modules/jade/runtime.js"],"names":[],"mappings":"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AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["UserM = require('js/models/admin/User')\nTagM  = require('js/models/Tag')\n\nUser  = require('js/controllers/admin/User')\nTrash = require('js/controllers/admin/Trash')\nMenu  = require('js/conjs/trollers/Menu')\n\nclass Admin extends Spine.Controller\n\n  USERS                  :   'users'\n  TRASH                  :   'trash'\n  ACCESS_RIGHTS          :   'access_rights'\n  USERS_CREATED_BY_ME    :   'users.created_by_me'\n  USERS_ACTIVE           :   'users.active'\n  USERS_SUSPENDED        :   'users.suspended'\n  USERS_SETTINGS         :   'settings.users'\n  USERS_STATS            :   'stats.users'  \n\n  class @MenuMgr extends Menu.Mgr\n\n    constructor: ->\n      super\n      \n    delegate: -> \n      controller: new MenuMgr.S(mgr:@)\n      routes: @routes\n\n    setButton: (@button) ->\n\n    routes: [\n      {path: /^\\/user/                   , callback: -> @admin.active(); app.modules['admin'].menu(app.modules['admin'].USERS)},\n      {path: '/users-byme'               , callback: -> @admin.active(); app.modules['admin'].menu(app.modules['admin'].USERS_CREATED_BY_ME)},\n      {path: '/users-active'             , callback: -> @admin.active(); app.modules['admin'].menu(app.modules['admin'].USERS_ACTIVE)},\n      {path: '/users-suspended'          , callback: -> @admin.active(); app.modules['admin'].menu(app.modules['admin'].USERS_SUSPENDED)},\n      {path: '/trash/users'              , callback: -> @admin.active(); app.modules['admin'].menu(app.modules['admin'].TRASH)},\n      {path: '/settings/users'           , callback: -> @admin.active(); app.modules['admin'].menu(app.modules['admin'].USERS_SETTINGS)}\n      {path: '/labelled/users/:label'    , callback: (params) -> @admin.active(); app.modules['admin'].menu(decodeURIComponent(S(params.label).dasherize().chompLeft('-').s))}\n    ]\n\n    class @S extends Spine.Controller\n      @include Spine.Log\n\n      logPrefix: '(Admin.Menu)'\n\n      className: 'menu-admin'\n      \n      constructor: ->\n        super\n\n        @append @mgr.button if @mgr.button\n\n        for key, value of @mgr.menus()\n          @append value\n\n        @active =>\n          @log 'Admin-Menu active'      \n\n  @mgr: new Admin.MenuMgr\n\n  menu: (id, clbk) -> Admin.mgr.activate(id, clbk)\n\n  users: require('js/lib/admin/users')\n\n  @labelTmpl: require('js/views/admin/menu/tag')\n  @stateTmpl: require('js/views/menu/link')  \n\n  defaultUrl: '/users'\n\n  name: 'admin'\n\n  constructor: ->\n    super\n\n    renderLabel = (label) -> Admin.labelTmpl(label)\n    \n    renderState = (state) =>\n      \n      countClass = switch state\n        when @USERS_CREATED_BY_ME then 'byme'\n        when @USERS_ACTIVE        then 'active'\n        when @USERS_SUSPENDED     then 'suspended'\n\n      (item) ->\n        item.countClass = \"count-#{countClass}\"\n        Admin.stateTmpl(item)\n\n    getUsersChildMenus = =>\n      $.Deferred (deferred) =>\n        app.on 'loaded', =>\n          TagM.Reload().done (objs) =>\n\n            labels = \n              for obj in objs\n                id: S(obj.name).dasherize().chompLeft('-').s,\n                title: S(obj.name).capitalize().s,\n                render: renderLabel,\n                href: \"/labelled/users/#{encodeURIComponent(obj.name)}\"\n      \n            deferred.resolve [{\n              id: @USERS_CREATED_BY_ME\n              title: 'Created by me'\n              render: renderState(@USERS_CREATED_BY_ME)\n              # icon: 'glyphicon-trash'\n              href: '/users-byme'\n            },{\n              id: @USERS_ACTIVE\n              title: 'Active'\n              render: renderState(@USERS_ACTIVE)\n              # icon: 'glyphicon-stats'\n              href: '/users-active'\n              state: 'users-active'\n            },{\n              id: @USERS_SUSPENDED\n              title: 'Suspended'\n              render: renderState(@USERS_SUSPENDED)\n              # icon: 'glyphicon-trash'\n              href: '/users-suspended'\n              state: 'suspended'\n            }].concat labels\n\n            if objs.length > 6\n              \n              setTimeout ->\n\n                jQuery('ul.children:not(:empty)').slimscroll({height: '203px'})  \n\n                jQuery('ul.children:not(:empty)')\n                    .parent()\n                    .siblings('.shadow')\n                    .css\n                      opacity: 0.4          \n\n                # jQuery('ul.children:not(:empty)').on 'scroll', ->\n                    \n                #     $(@).parent()\n                #         .siblings('.shadow.up')\n                #         .css\n                #           opacity: if @scrollTop is 0 then 0 else 0.6\n\n                #     $(@).parent()\n                #         .siblings('.shadow.down')\n                #         .css\n                #           opacity: if @scrollTop is 0 then 0.6 else 0                         \n\n    Admin.mgr.setButton new Admin.NewButton\n\n    Admin.mgr.add\n      id: 'admin'\n      header: 'ADMIN'\n      items: [{\n        id: @USERS\n        title: 'Users'\n        icon: 'glyphicon-user'\n        href: '/users'\n        getChildren: getUsersChildMenus\n      },{\n        id: @ACCESS_RIGHTS\n        title: 'Access Rights'\n        icon: 'glyphicon-tags'\n        href: '/roles'\n      },{\n        id: @TRASH\n        title: 'Trash'\n        icon: 'glyphicon-trash'\n        href: '/trash/users'\n      },{\n        id: @USERS_STATS\n        title: 'Stats'\n        icon: 'glyphicon-stats'\n        href: '/stats/users'\n      },{\n        id: @USERS_SETTINGS\n        title: 'Settings'\n        icon: 'glyphicon-wrench'\n        href: '/settings/users'\n      }]\n\n    @app.registerApp(\n      name: @name\n      defaultUrl: @defaultUrl\n      menu: Admin.mgr.delegate()\n      controllers:\n        users  : User.Stack\n        trash  : Trash.Stack\n      routes: {}\n    )\n\n    UserM.on 'refresh', =>\n      jQuery('.count-byme').text numeral(UserM.countUsersOf(app.session.user.id)).format()\n      jQuery('.count-active').text numeral(UserM.countActive()).format()\n      jQuery('.count-suspended').text numeral(UserM.countSuspended()).format()\n\n    console.log 'Loaded #admin module'\n\n  class @NewButton extends Spine.Controller\n\n    @tmpl: require('js/views/admin/menu/new')()\n\n    className: 'admin menu new-user'\n\n    events:\n      'click button.new-user' : 'clicked'    \n\n    constructor: ->\n      super\n\n      @render()\n\n    render: ->\n      @html NewButton.tmpl\n\n    clicked: (e) =>\n      e.preventDefault()\n      e.stopPropagation()\n\n      @navigate('/users/new')\n\nmodule.exports = Admin\n","TrashM = require('js/models/admin/DeletedUser')\nMenu   = require('js/controllers/Menu')\n\nSelectionMgr = require('js/lib/selection')\n\nposition = require('js/lib/position')\n\nclass Trash\n\nclass Trash.Single extends Spine.Controller\n\n  constructor: ->\n    super\n\n# For viewing all users in Trash\nclass Trash.List extends Spine.Controller\n\n  logPrefix: '(Trash.List)'\n\n  className: 'users-trash empty'\n\n  calcHeight: -> $(window).height() - @$('.selections').outerHeight() - @toolbar.el.outerHeight() - $('.navbar').outerHeight() - 8\n  \n  @SELECT_ALL: 'select:all'\n  @SELECT_NONE: 'select:none'\n  @SELECT_ACTIVE: 'select:active'\n  @SELECT_SUSPENDED: 'select:suspended'  \n  \n  constructor: ->\n    super   \n\n    @selMgr = new SelectionMgr\n\n    @selMgr.isWholePageSelected = => \n      for row in @rows\n        if not @selMgr.isSelected(row.user)\n          return no\n      yes    \n\n    @selMgr.isAllSelected = => \n      for user in TrashM.all()\n        if not @selMgr.isSelected(user)\n          return no\n      yes                \n\n    @selMgr.on 'toggle-selection', @ToggleSelection\n\n    @toolbar     = new List.Toolbar({@selMgr, el: List.toolbarTmpl, mgr:@})  \n    @list        = new List.Body(selMgr:@selMgr, mgr: @)\n    @contextmenu = new List.ContextMenu(el: List.contextmenuTmpl)        \n\n    @render()    \n\n    @active (@state, label) -> \n      @log(\"active State<#{@state}>\")\n      \n      @delay -> \n\n        app.modules['admin'].menu(app.modules['admin'].TRASH, (item) -> item.loading())\n\n        TrashM.Reload()\n\n        @delay -> @list.calcHeight()\n\n    @toolbar.on 'next', @Next\n    @toolbar.on 'prev', @Prev\n    @toolbar.on 'purge', => @Purge(@selMgr.getSelection())\n    \n    @on 'purge', (user) => @Purge [user]\n\n    TrashM.on 'refresh', => @Reload(); app.modules['admin'].menu(app.modules['admin'].TRASH, (item) -> item.doneLoading())\n\n    @list.on 'empty', =>\n      @log 'Empty trash'\n    \n    @contextmenu.on 'purge', (user) => @Purge([user])\n\n  @tmpl: require('js/views/admin/trash/list')({perPage: TrashM.MaxResults})\n  @rowTmpl: require('js/views/admin/trash/row')()\n  @toolbarTmpl: require('js/views/admin/trash/list.toolbar')()\n  @contextmenuTmpl: require('js/views/admin/trash/contextmenu')()\n\n  start: 0\n\n  Reload: =>\n    @Refresh TrashM.slice(@start, @start + TrashM.MaxResults)\n\n  Next: =>\n    @start += TrashM.MaxResults\n    @Reload()\n\n  Prev: =>\n    @start -= TrashM.MaxResults if @start > 0\n    @Reload()\n\n  Purge: (users) ->\n    @log \"Purge [#{users}]\"\n    ;\n\n  rows: []\n\n  add: (row) ->\n    index = @rows.push(row)\n\n    row.on 'release', =>\n      @rows.splice(index - 1, 1)\n\n    row.on 'contextmenu', (evt, user) =>\n      @contextmenu.Show(evt, user)\n\n    row.on 'purge', (user) =>\n      @Purge [user]\n    \n    row\n\n  @_indexof = (rec, all=TrashM.all()) -> # Necessary access\n    for r, i in all when rec.eql(r)\n      return i\n    -1    \n\n  AppendOne: (user) ->\n    @AppendMany [user]\n\n  AppendMany: (users) ->\n    if users.length\n\n      @el.removeClass('empty')\n\n      all = TrashM.all()\n\n      @toolbar.page List._indexof(users[0], all), List._indexof(users[users.length - 1], all), all.length\n\n      for user in users\n        @list.addUser @add(delegate = new List.Row({user, @selMgr, el: List.rowTmpl})).el\n        delegate.DelegateEvents()\n\n    else\n\n      @el.addClass('empty')\n      @toolbar.page -1, -1, 0      \n\n  Refresh: (users) ->\n    @rows[lastIndex - 1].release() while lastIndex = @rows.length     \n\n    @delay -> @AppendMany(users)\n\n  ToggleSelectionAll: (selectionState) =>\n\n    switch selectionState\n      \n      when List.SELECT_ALL\n\n        @selMgr.selected(user) for user in TrashM.all()\n\n      when List.SELECT_NONE\n\n        @selMgr.removeAll()\n        @toolbar.allSelected = no\n      \n      when List.SELECT_ACTIVE\n\n        for user in TrashM.all()\n          if not user.suspended\n            @selMgr.selected(user)\n          else\n            @selMgr.removed(user)\n      \n      when List.SELECT_SUSPENDED \n\n        for user in TrashM.all()\n          if user.suspended\n            @selMgr.selected(user)\n          else\n            @selMgr.removed(user)  \n  \n  ToggleSelection: (selectionState) =>    \n    \n    switch selectionState\n      \n      when List.SELECT_ALL\n\n        @selMgr.selected(row.user) for row in @rows\n\n      when List.SELECT_NONE\n\n        selectedOnes = @selMgr.getSelection()\n        @selMgr.removed(selectedOnes[lastIndex - 1]) while lastIndex = selectedOnes.length\n        \n        @toolbar.allSelected = no\n\n        @delay -> @toolbar.selectionChanged()\n        @delay -> @list.selectionChanged()\n      \n      when List.SELECT_ACTIVE\n\n        for row in @rows\n          if not row.user.suspended\n            @selMgr.selected(row.user)\n          else\n            @selMgr.removed(row.user)\n      \n      when List.SELECT_SUSPENDED \n\n        for row in @rows\n          if row.user.suspended\n            @selMgr.selected(row.user)\n          else\n            @selMgr.removed(row.user)\n\n  render: ->\n    @append @toolbar.el\n    @append @list.el\n    @append @contextmenu.el  \n\n  class @Body extends Spine.Controller\n\n    className: 'body'\n\n    @elements:\n      '.list'        : 'list'\n      '.scrollable'  : 'scrollable'\n\n    @events:\n      'click .empty'        : 'empty'   \n      'click .clear'        : 'clearAll'   \n      'click .select-all'   : 'selectAll'\n\n    calcHeight: -> \n      @scrollable.css({\n        height: @mgr.calcHeight()\n        })\n    \n    constructor: ({selMgr: @selMgr}) ->\n      super\n\n      @selMgr.on 'selectionChanged', @selectionChanged\n      @on 'page-selected', @selectionChanged\n\n      @on 'clear-all', =>\n        @mgr.ToggleSelectionAll(List.SELECT_NONE) \n        @delay(-> @calcHeight())\n\n      @on 'select-all', => \n        @mgr.ToggleSelectionAll(List.SELECT_ALL) \n        @delay(-> @calcHeight())      \n\n      @on 'select', (@state) =>\n        @mgr.ToggleSelection(state) \n        @delay(-> @calcHeight())      \n\n      @render()\n\n      @$(window).resize(@calcHeight)\n\n    selectionChanged: =>\n      @el.toggleClass 'page-selected', TrashM.count() > TrashM.MaxResults and @selMgr.isWholePageSelected()\n      @el.toggleClass 'all-selected', TrashM.count() > TrashM.MaxResults and @selMgr.isAllSelected()\n      @calcHeight()\n\n    Off: (fn) ->\n      @selMgr.off 'selectionChanged', @selectionChanged\n      do fn\n      @selMgr.on 'selectionChanged', @selectionChanged\n\n    render: ->\n      @html List.tmpl\n\n    addUser: (user) ->\n      @list.append user\n\n    empty: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @trigger 'empty'   \n\n    clearAll: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @el.removeClass 'all-selected'\n      @el.removeClass 'page-selected'\n\n      @Off =>\n        @trigger 'clear-all'\n\n    selectAll: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @el.addClass 'all-selected'\n      @el.removeClass 'page-selected'\n\n      @Off =>\n        @trigger 'select-all'\n  \n  class @ContextMenu extends Spine.Controller\n\n    logPrefix: '(Trash.ContextMenu)'\n\n    @events:\n      'click .purge'    : 'purge'  \n      'click .restore'  : 'restore'    \n\n    constructor: ->\n      super\n\n      @$(document).click(=> @el.hide())\n\n    Show: (evt, @user) ->\n      position.positionPopupAtPoint(evt.clientX, evt.clientY, @el[0])\n      @el.show()\n      \n    purge: (e) ->\n      @log(\"purge User<#{@user.id}>\")\n\n      e.preventDefault()\n      \n      @trigger 'purge', @user\n\n    restore: (e) ->\n      @log(\"restore User<#{@user.id}>\")\n\n      e.preventDefault()\n      e.stopPropagation()\n      \n      @trigger 'restore', @user \n\n  # For viewing a user in the table\n  class @Row extends Spine.Controller\n\n    @Events:\n      'click'           : 'clicked'   \n      'click .purge'    : 'purge'   \n      'click .select'   : 'select'\n      'contextmenu'     : 'contextmenu'   \n\n    constructor: ->\n      super\n\n      @selMgr.on \"selectionChanged_#{@user.cid}\", @selectionChanged\n      @listenTo @user, 'change', @FillData\n\n      @bind 'release', -> \n        @selMgr.off \"selectionChanged_#{@user.cid}\", @selectionChanged\n\n      @FillData()\n\n    DelegateEvents: ->\n      @delegateEvents(Row.Events)\n\n    FillData: ->\n\n      @el.toggleClass 'selected', @selMgr.isSelected(@user)\n      \n      @$('.fullName').html(@user.fullName())\n      @$('.primaryEmail').html(@user.primaryEmail)\n\n      @el\n\n    contextmenu: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @trigger 'contextmenu', e, @user      \n\n    selectionChanged: (selected) => \n      @el.toggleClass 'selected', selected\n\n    clicked: (evt) ->\n      evt.stopPropagation()\n\n      @delay -> @navigate('/trash/user', @user.id)\n\n    purge: (evt) ->\n      evt.preventDefault()\n      evt.stopPropagation()\n\n      @trigger 'purge', @user.id     \n\n    Off: (fn) ->\n      @selMgr.off \"selectionChanged_#{@user.cid}\", @selectionChanged\n      do fn\n      @selMgr.on \"selectionChanged_#{@user.cid}\", @selectionChanged  \n    \n    select: (evt) ->\n      evt.stopPropagation()\n\n      @Off =>\n\n        if @el.hasClass('selected')    \n          @selMgr.removed(@user)\n        else\n          @selMgr.selected(@user)\n\n      @el.toggleClass 'selected'\n\n  # Actions to perform on all users or selected user(s)\n  class @Toolbar extends Spine.Controller\n\n    @elements:\n      '.select'                     : 'checkbox'\n      '.next'                       : 'next'\n      '.prev'                       : 'prev'\n      '.select-toggle-wrapper'      : 'selectToggle'\n\n    @Events:\n      'click .select'        : 'ToggleSelection'\n      'click .restore'       : 'restore'\n      'click .refresh'       : 'refresh'\n      'click .purge'         : 'purge'    \n      'click .next'          : 'Next'    \n      'click .prev'          : 'Prev'\n\n    allSelected: no  \n\n    class @SelectMenu extends Spine.Controller\n\n      events:\n        'click a' : 'select'\n\n      constructor: ->\n        super\n\n      select: (e) ->\n        e.preventDefault()\n\n        @trigger 'select', @$(e.target).attr('data-state')    \n\n    constructor: ->\n      super   \n\n      @selMgr.on 'selectionChanged', @selectionChanged\n\n      @bind 'release', ->\n        @selMgr.off 'selectionChanged', @selectionChanged\n\n      @delegateEvents(Toolbar.Events)\n\n      (new Toolbar.SelectMenu(el: @$('.selection-menu'))).on 'select', (state) => @mgr.list.trigger 'select', state\n\n      @selectToggle.dropdown()\n                   .closest('#users-trash-select').on 'show.bs.dropdown', => \n                      @delay (-> @selectToggle.closest('button.select').tooltip('hide')), 10     \n\n    selectionChanged: => \n      @el.toggleClass 'has-selection', @selMgr.hasSelection()\n      @el.toggleClass 'all', wholePage = @selMgr.isWholePageSelected()\n\n      @allSelected = yes if wholePage\n\n    Off: (fn) ->\n      @selMgr.off 'selectionChanged', @selectionChanged\n      do fn\n      @selMgr.on 'selectionChanged', @selectionChanged \n\n    ToggleSelection: ->\n\n      @el.toggleClass 'has-selection', @allSelected = not @allSelected\n      @el.toggleClass 'all', @allSelected\n\n      @Off =>\n        @mgr.list.Off =>\n          @selMgr.trigger 'toggle-selection', if @allSelected then List.SELECT_ALL else List.SELECT_NONE\n\n      @mgr.list.trigger 'page-selected'\n\n    page: (start, end, total) ->\n      if total > TrashM.MaxResults # show paging only if necessary\n        \n        @next.prop('disabled', end is total - 1)\n        @prev.prop('disabled', start is 0)\n\n        @$('.start').html(start + 1)\n        @$('.end').html(\"#{end + 1}&nbsp;\")\n        @$('.count').html(\"#{numeral(total).format()} &nbsp;\")\n\n      @el.toggleClass 'needs-paging', total > TrashM.MaxResults\n      @el.toggleClass 'empty', total is 0\n    \n    refresh: ->\n      return if @selMgr.hasSelection()\n\n      @delay ->\n        app.modules['admin'].menu(app.modules['admin'].TRASH, (item) -> item.loading())\n        TrashM.Reload()\n    \n    purge: ->\n      @log 'List toolbar.purge'       \n\n    restore: ->\n      @log 'List toolbar.restore'             \n    \n    Next: -> \n      @trigger 'next'         \n    \n    Prev: -> \n      @trigger 'prev'\n\n    getSelectedUsers: -> @selMgr.getSelection()\n    \nclass Trash.Stack extends Spine.Stack\n\n  logPrefix: '(Trash.Stack)'\n\n  className: 'spine stack users-trash'\n\n  controllers:\n    list    : Trash.List\n    single  : Trash.Single\n\n  constructor: ->\n\n    @routes = {      \n      '/trash/users'     : 'list'\n      '/trash/user/:id'  : (params) => @single.active(params.id)\n    }\n\n    super\n\nmodule.exports = Trash","UserM     = require('js/models/admin/User')\nTagM      = require('js/models/Tag')\nUserTagM  = require('js/models/admin/UserTag')\nMenu      = require('js/controllers/Menu')\n\nLabelForm = require('js/controllers/LabelForm')\n\nSelectionMgr = require('js/lib/selection')\n\nposition = require('js/lib/position')\n\nclass User\n\n# For creating and modifying users\nclass User.Form extends Spine.Stack\n\n  logPrefix: '(User.Form)'\n\n  className: 'user form spine stack' \n\n  @defaultAvatarUrl: \"http://www.gravatar.com/avatar/00000000000000000000000000000000?d=mm&f=y&s=195\" \n\n  @elements:\n    'fieldset'  : 'form'   \n    '.save'     : 'saveBtn'    \n\n  constructor: ->\n\n    @controllers = {\n      edit  : Form.Edit\n      New   : Form.New      \n    }\n\n    @routes = {      \n      '/users/new'      : 'New'\n      '/user/:id/edit'  : (params) => @edit.active(params.id)    \n    }\n\n    super\n\n    @edit.Save = @New.Save = @Save\n\n    @active -> \n      @log(\"active\")\n\n  @toolbarTmpl: require('js/views/admin/user/form.toolbar')\n\n  @UserInfo: (it, id=undefined) ->\n    id: id\n\n    primaryEmail: app.cleaned it.primaryEmail\n    givenName: app.cleaned it.givenName\n    familyName: app.cleaned it.familyName\n    gender: app.cleaned it.gender\n    \n    homeAddress:{\n      city: app.cleaned it.homeCity\n      country: app.cleaned it.homeCountry\n      postalCode: app.cleaned it.homePostalCode\n      streetAddress: app.cleaned it.homeStreetAddress\n    },\n    \n    workAddress:{\n      city: app.cleaned it.workCity\n      country: app.cleaned it.workCountry\n      postalCode: app.cleaned it.workPostalCode\n      streetAddress: app.cleaned it.workStreetAddress\n    },\n    \n    contacts: {\n\n      mobiles:{\n        mobile1: app.cleaned it.mobile1\n        mobile2: app.cleaned it.mobile2\n      }, \n      \n      home:{\n        email: app.cleaned it.homeEmail\n        phoneNumber: app.cleaned it.homePhoneNumber\n        fax: app.cleaned it.homeFax\n      }, \n      \n      work:{\n        email: app.cleaned it.workEmail\n        phoneNumber: app.cleaned it.workPhoneNumber\n        fax: app.cleaned it.workFax\n      }\n    }          \n\n  Save: (user) =>\n    @log \"Save #{JSON.stringify(user)}\"\n\n    @form.prop('disabled', true)\n    @saving()\n\n    done = =>\n      @doneSaving()\n      @form.prop('disabled', false)            \n\n    # amin.users.upsertUser(user)\n    #    .done (updatedOrNew) =>\n\n    #       if user.id\n\n    #         try\n    #           UserM.find(user.id).refresh(updatedOrNew)\n    #         catch ex\n    #           @log \"Error! can't find user for id=#{id}\"\n    #           UserM.refresh [updatedOrNew]\n\n    #         done()\n    #         @delay -> @navigate('/users')\n\n    #         return\n\n    #       UserM.refresh [updatedOrNew]\n\n    #       done()\n    #       @delay -> @navigate('/users')\n\n    #       return\n\n    #    .fail =>\n\n    #       @log \"Error while saving user #{JSON.stringify(user)}\"\n    #       done()\n\n    done()\n    ;\n\n  saving: ->\n    @saveBtn.button('saving')\n    @el.addClass('saving')\n\n  doneSaving: ->\n    @el.removeClass('saving')\n    @saveBtn.button('reset')      \n\n  class @Toolbar extends Spine.Controller\n\n    @events:\n      'click .back'   : 'cancel'\n      'click .save'   : 'save'    \n\n    constructor: ->\n      super  \n\n    cancel: ->\n      @navigate '/users'\n\n    save: ->\n      @trigger 'save'\n\n  class @It extends Spine.Controller\n\n    className: 'it scrollable'    \n\n    @elements:\n      '[name=\"primaryEmail\"]'                       : 'primaryEmail'\n      '[name=\"givenName\"]'                          : 'givenName'\n      '[name=\"familyName\"]'                         : 'familyName'\n      '[name=\"gender\"]'                             : 'gender'\n\n      '[name=\"workAddress[city]\"]'                  : 'workCity'\n      '[name=\"workAddress[country]\"]'               : 'workCountry'\n      '[name=\"workAddress[postalCode]\"]'            : 'workPostalCode'\n      '[name=\"workAddress[streetAddress]\"]'         : 'workStreetAddress'\n\n      '[name=\"homeAddress[city]\"]'                  : 'homeCity'\n      '[name=\"homeAddress[country]\"]'               : 'homeCountry'\n      '[name=\"homeAddress[postalCode]\"]'            : 'homePostalCode'\n      '[name=\"homeAddress[streetAddress]\"]'         : 'homeStreetAddress'\n\n      '[name=\"contacts[mobiles][mobile1]\"]'         : 'mobile1'\n      '[name=\"contacts[mobiles][mobile2]\"]'         : 'mobile2'\n\n      '[name=\"contacts[work][phoneNumber]\"]'        : 'workPhoneNumber'\n      '[name=\"contacts[work][email]\"]'              : 'workEmail'\n      '[name=\"contacts[work][fax]\"]'                : 'workFax'\n\n      '[name=\"contacts[home][phoneNumber]\"]'        : 'homePhoneNumber'\n      '[name=\"contacts[home][email]\"]'              : 'homeEmail'\n      '[name=\"contacts[home][fax]\"]'                : 'homeFax'    \n      \n      '#avatar'                                     : 'avatar'          \n\n    constructor: ->\n      super    \n\n      @avatarImg = new Image\n\n      @avatarImg.onerror = =>\n        @avatar[0].src = Form.defaultAvatarUrl\n\n      @avatarImg.onload = =>\n        @avatar[0].src = @avatarImg.src\n\n      @render()\n\n    render: ->\n      @html @tmpl\n\n      opts = (\n        for country in countries\n          \"<option value='#{country['code']}'>#{country['name']}</option>\"\n      ).join('')\n\n      @homeCountry.html(opts).chosen(allow_single_deselect: yes, width:\"330px\")\n      @workCountry.html(opts).chosen(allow_single_deselect: yes, width:\"330px\")\n\n      @$('.modules select').chosen({disable_search: true, width: '330px'})\n\n      @el\n\n    loadAvatar: (id) ->        \n      @delay ->        \n        @avatarImg.src = \"/api/v1/avatar/#{id}\"\n\n    Load: (user) ->\n\n      @primaryEmail.val user.primaryEmail\n      @givenName.val user.givenName\n      @familyName.val user.familyName\n      @gender.val user.gender\n\n      if avatar = user.avatar\n        @loadAvatar(avatar)\n\n      if homeAddress = user.homeAddress\n        homeAddress.city and (@homeCity.val homeAddress.city)\n        homeAddress.country and (@homeCountry.val homeAddress.country)\n        homeAddress.postalCode and (@homePostalCode.val homeAddress.postalCode)\n        homeAddress.streetAddress and (@homeStreetAddress.val homeAddress.streetAddress)\n\n      if workAddress = user.workAddress\n        workAddress.city and (@workCity.val workAddress.city)\n        workAddress.country and (@workCountry.val workAddress.country)\n        workAddress.postalCode and (@workPostalCode.val workAddress.postalCode)\n        workAddress.streetAddress and (@workStreetAddress.val workAddress.streetAddress)   \n\n      if contacts = user.contacts\n\n        if mobiles = contacts.mobiles\n          mobiles.mobile1 and (@mobile1.val mobiles.mobile1)\n          mobiles.mobile2 and (@mobile2.val mobiles.mobile2)\n\n        if home = contacts.home\n          home.phoneNumber and (@homePhoneNumber.val home.phoneNumber)\n          home.email and (@homeEmail.val home.email)\n          home.fax and (@homeFax.val home.fax)\n\n        if work = contacts.work\n          work.phoneNumber and (@workPhoneNumber.val work.phoneNumber)\n          work.email and (@workEmail.val work.email)\n          work.fax and (@workFax.val work.fax)\n \n  class @New extends Spine.Controller\n\n    @TITLE: 'Create a new user'\n\n    className: 'user form new'\n\n    tag: 'form'\n\n    @tmpl: require('js/views/admin/user/form.new')()\n\n    calcHeight: -> $(window).height() - $('.selections').outerHeight() - @toolbar.el.outerHeight() - $('.navbar').outerHeight() - 8\n\n    constructor: ->\n      super    \n\n      @toolbar = new Form.Toolbar(el: Form.toolbarTmpl(title: New.TITLE))  \n      @it      = new Form.It(tmpl: New.tmpl) \n\n      @$(window).resize(=> @it.el.css({height: @calcHeight()}))       \n\n      @active ->\n        @log(\"New user\")\n\n        @it.Load(UserM.Defaults)\n\n        @delay -> @it.el.css({height: @calcHeight()})\n\n      @toolbar.on 'save', @doSave\n\n      @render()\n\n    render: ->\n      @append @toolbar.el\n      @append @it.el\n\n    doSave: =>\n      @Save Form.UserInfo(@it)\n\n  class @Edit extends Spine.Controller\n\n    @TITLE: 'Edit user'\n\n    className: 'user form edit'\n\n    tag: 'form'\n\n    @tmpl: require('js/views/admin/user/form.edit')()\n\n    calcHeight: -> $(window).height() - $('.selections').outerHeight() - @toolbar.el.outerHeight() - $('.navbar').outerHeight() - 8\n\n    constructor: ->\n      super\n\n      @toolbar = new Form.Toolbar(el: Form.toolbarTmpl(title: Edit.TITLE))  \n      @it      = new Form.It(tmpl: Edit.tmpl)\n\n      @$(window).resize(=> @it.el.css({height: @calcHeight()}))\n\n      @active (id) ->\n        @log(\"Edit user id=#{id}\")\n\n        try\n\n          if user = UserM.find(id) \n            @it.Load(user.toJSON())\n            @id = id         \n\n        catch ex\n          @log(\"Error finding User<#{id}>\")\n\n        @delay -> @it.el.css({height: @calcHeight()})\n\n      @toolbar.on 'save', @doSave\n\n      @render()\n\n    render: ->\n      @append @toolbar.el\n      @append @it.el     \n\n    doSave: =>\n      @Save Form.UserInfo(@it, @id)       \n\n# For viewing a user\nclass User.Single extends Spine.Controller\n\n  logPrefix: '(User.Single)'\n\n  className: 'user single'\n\n  constructor: ->\n    super\n\n    @toolbar = new Single.Toolbar(el: Single.toolbarTmpl)  \n    @it      = new Single.It\n\n    @active (id) ->\n      @log(\"active User<#{id}>\")\n\n      try\n\n        @it.Load(user) if user = UserM.find(id)          \n\n      catch ex\n        @log(\"Error finding User##{id}\")\n\n  @tmpl: require('js/views/admin/user/single')()\n  @toolbarTmpl: require('js/views/admin/user/single.toolbar')()\n\n  render: ->\n    @append @toolbar.el\n    @append @it.el    \n\n  class @It extends Spine.Controller\n\n    className: 'it scrollable'\n\n    constructor: ->\n      super\n\n      @render()\n\n    render: ->\n      @html Single.tmpl\n\n    Load: (user) ->\n      @stopListening(@user) if @user\n\n      @user = user\n      @listenTo @user, 'change', @FillData\n\n      @FillData()\n\n    FillData: ->\n      # Fill data\n      @el\n\n  # Actions to perform on all users or selected user(s)\n  class @Toolbar extends Spine.Controller \n\n    @events:\n      'click .back'       : 'back'\n      'click .refresh'    : 'refresh'\n      'click .edit'       : 'edit'\n      'click .purge'      : 'purge'\n\n    constructor: ->\n      super   \n\n    back: ->\n      @delay => @navigate('/users') \n\n    refresh: ->\n      @log 'Single toolbar.refresh'\n    \n    edit: -> \n      @log 'Single toolbar.edit'\n    \n    purge: -> \n      @log 'Single toolbar.purge'\n\n# For viewing all users\nclass User.List extends Spine.Controller\n\n  logPrefix: '(User.List)'\n\n  className: 'users'\n\n  calcHeight: -> $(window).height() - @$('.selections').outerHeight() - @toolbar.el.outerHeight() - $('.navbar').outerHeight() - 8\n\n  @ALL: 'all'\n  @OWN: 'byme'\n  @ACTIVE: 'active'\n  @SUSPENDED: 'suspended'\n  @LABELLED: 'labelled'\n  \n  @SELECT_ALL: 'select:all'\n  @SELECT_NONE: 'select:none'\n  @SELECT_ACTIVE: 'select:active'\n  @SELECT_SUSPENDED: 'select:suspended'\n  \n  constructor: ->\n    super   \n\n    @selMgr = new SelectionMgr\n\n    @selMgr.isWholePageSelected = => \n      for row in @rows\n        if not @selMgr.isSelected(row.user)\n          return no\n      yes\n\n    @selMgr.isAllSelected = => \n      for user in UserM.select(@getFilter())\n        if not @selMgr.isSelected(user)\n          return no\n      yes          \n\n    @selMgr.on 'toggle-selection', @ToggleSelection\n\n    @toolbar     = new List.Toolbar({@selMgr, el: List.toolbarTmpl, mgr:@})  \n    @list        = new List.Body({@selMgr, mgr: @})\n    @contextmenu = new List.ContextMenu(el: List.contextmenuTmpl)        \n\n    @render()\n\n    # @$('.scrollable').slimScroll(height: @list.calcHeight())\n\n    @active (@state, label) -> \n      @log(\"active State<#{@state}>\")\n\n      @label = decodeURIComponent(label)\n      \n      @delay ->\n\n        switch @state\n          when List.ALL         then app.modules['admin'].menu(app.modules['admin'].USERS, (item) -> item.loading())\n          when List.OWN         then app.modules['admin'].menu(app.modules['admin'].USERS_CREATED_BY_ME, (item) -> item.loading())\n          when List.ACTIVE      then app.modules['admin'].menu(app.modules['admin'].USERS_ACTIVE, (item) -> item.loading())\n          when List.SUSPENDED   then app.modules['admin'].menu(app.modules['admin'].USERS_SUSPENDED, (item) -> item.loading())\n          when List.LABELLED    then app.modules['admin'].menu(S(@label).dasherize().chompLeft('-').s, (item) -> item.loading())\n\n        UserM.Reload()\n\n        @delay -> @list.calcHeight()\n\n    @toolbar.on 'next', @Next\n    @toolbar.on 'prev', @Prev\n    @toolbar.on 'purge', => @Purge(@selMgr.getSelection())\n\n    UserM.on 'refresh', => \n      @Reload()\n\n      switch @state\n          when List.ALL         then app.modules['admin'].menu(app.modules['admin'].USERS, (item) -> item.doneLoading())\n          when List.OWN         then app.modules['admin'].menu(app.modules['admin'].USERS_CREATED_BY_ME, (item) -> item.doneLoading())\n          when List.ACTIVE      then app.modules['admin'].menu(app.modules['admin'].USERS_ACTIVE, (item) -> item.doneLoading())\n          when List.SUSPENDED   then app.modules['admin'].menu(app.modules['admin'].USERS_SUSPENDED, (item) -> item.doneLoading())\n          when List.LABELLED    then app.modules['admin'].menu(S(@label).dasherize().chompLeft('-').s, (item) -> item.doneLoading())\n\n    @contextmenu.on 'purge', (user) => @Purge([user])\n\n  @tmpl: require('js/views/admin/user/list')({perPage: UserM.MaxResults})\n  @rowTmpl: require('js/views/admin/user/row')()\n  @toolbarTmpl: require('js/views/admin/user/list.toolbar')()\n  @contextmenuTmpl: require('js/views/admin/user/contextmenu')()\n\n  start: 0\n\n  getFilter: ->    \n\n    switch @state\n        when List.ALL         then -> yes\n        when List.OWN         then (user) -> user.createdBy is app.session.user.id\n        when List.ACTIVE      then (user) -> not user.suspended\n        when List.SUSPENDED   then (user) -> user.suspended\n        when List.LABELLED    then label = @label; (user) -> user.labels.indexOf(label) > -1    \n\n  Reload: =>\n    @Refresh UserM.select(@getFilter()).slice(@start, @start + UserM.MaxResults)\n\n  Next: =>\n    @start += UserM.MaxResults\n    @Reload()\n\n  Prev: =>\n    @start -= UserM.MaxResults if @start > 0\n    @Reload()\n\n  Purge: (users) ->\n    ;\n\n  rows: []\n\n  add: (row) ->\n    index = @rows.push(row)\n\n    row.on 'release', =>\n      @rows.splice(index - 1, 1)\n\n    row.on 'contextmenu', (evt, user) =>\n      @contextmenu.Show(evt, user)             \n    \n    row\n\n  @_indexof = (rec, all=UserM.select(@getFilter())) -> # Necessary access\n    for r, i in all when rec.eql(r)\n      return i\n    -1    \n\n  AppendOne: (user) ->\n    @AppendMany [user]\n\n  AppendMany: (users) ->\n    if users.length\n\n      all = UserM.select(@getFilter())\n\n      @toolbar.page List._indexof(users[0], all), List._indexof(users[users.length - 1], all), all.length\n\n      for user in users\n        @list.addUser @add(delegate = new List.Row({user, @selMgr, el: List.rowTmpl})).el\n        delegate.DelegateEvents()\n\n    else\n\n      @toolbar.page -1, -1, 0              \n\n  Refresh: (users) ->\n    @rows[lastIndex - 1].release() while lastIndex = @rows.length     \n\n    @delay -> @AppendMany(users)\n\n  ToggleSelectionAll: (selectionState) =>\n\n    switch selectionState\n      \n      when List.SELECT_ALL\n\n        @selMgr.selected(user) for user in UserM.select(@getFilter())\n\n      when List.SELECT_NONE\n\n        @selMgr.removeAll()\n        @toolbar.allSelected = no\n      \n      when List.SELECT_ACTIVE\n\n        for user in UserM.select(@getFilter())\n          if not user.suspended\n            @selMgr.selected(user)\n          else\n            @selMgr.removed(user)\n      \n      when List.SELECT_SUSPENDED \n\n        for user in UserM.select(@getFilter())\n          if user.suspended\n            @selMgr.selected(user)\n          else\n            @selMgr.removed(user)\n  \n  ToggleSelection: (selectionState) =>    \n    \n    switch selectionState\n      \n      when List.SELECT_ALL\n\n        @selMgr.selected(row.user) for row in @rows\n\n      when List.SELECT_NONE\n\n        selectedOnes = @selMgr.getSelection()\n        @selMgr.removed(selectedOnes[lastIndex - 1]) while lastIndex = selectedOnes.length\n        \n        @toolbar.allSelected = no\n\n        @delay -> @toolbar.selectionChanged()\n        @delay -> @list.selectionChanged()\n      \n      when List.SELECT_ACTIVE\n\n        for row in @rows\n          if not row.user.suspended\n            @selMgr.selected(row.user)\n          else\n            @selMgr.removed(row.user)\n      \n      when List.SELECT_SUSPENDED \n\n        for row in @rows\n          if row.user.suspended\n            @selMgr.selected(row.user)\n          else\n            @selMgr.removed(row.user)\n\n  render: ->\n    @append @toolbar.el\n    @append @list.el\n    @append @contextmenu.el  \n\n  class @Body extends Spine.Controller\n\n    className: 'body'\n\n    @elements:\n      '.list'        : 'list'\n      '.scrollable'  : 'scrollable'\n\n    @events:\n      'click .clear'        : 'clearAll'   \n      'click .select-all'   : 'selectAll'\n\n    calcHeight: => \n      @scrollable.css({\n        height: @mgr.calcHeight()\n        })\n    \n    constructor: ->\n      super\n\n      @selMgr.on 'selectionChanged', @selectionChanged\n      @on 'page-selected', @selectionChanged\n\n      @on 'clear-all', =>\n        @mgr.ToggleSelectionAll(List.SELECT_NONE) \n        @delay => @calcHeight()\n\n      @on 'select-all', => \n        @mgr.ToggleSelectionAll(List.SELECT_ALL) \n        @delay => @calcHeight()\n\n      @on 'select', (@state) =>\n        @mgr.ToggleSelection(state) \n        @delay => @calcHeight()     \n\n      @render()\n\n      @$(window).resize(=> @calcHeight())\n\n    selectionChanged: =>\n      needMorThanOnePage = UserM.select(@mgr.getFilter()).length > UserM.MaxResults\n      \n      @el.toggleClass 'page-selected', needMorThanOnePage and @selMgr.isWholePageSelected()\n      @el.toggleClass 'all-selected', needMorThanOnePage and @selMgr.isAllSelected()\n      \n      @calcHeight()\n\n    Off: (fn) =>\n      @selMgr.off 'selectionChanged', @selectionChanged\n      do fn\n      @selMgr.on 'selectionChanged', @selectionChanged\n\n    render: ->\n      @html List.tmpl\n\n    addUser: (user) ->\n      @list.append user\n\n    clearAll: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @el.removeClass 'all-selected'\n      @el.removeClass 'page-selected'\n\n      @Off =>\n        @trigger 'clear-all'\n\n    selectAll: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @el.addClass 'all-selected'\n      @el.removeClass 'page-selected'\n\n      @Off =>\n        @trigger 'select-all'\n  \n  class @ContextMenu extends Spine.Controller\n\n    logPrefix: '(User.ContextMenu)'\n\n    @events:\n      'click .edit'    : 'edit'\n      'click .purge'   : 'purge'  \n      'click .disable' : 'suspend'  \n\n    constructor: ->\n      super\n\n      @$(document).click(=> @el.hide())\n\n    Show: (evt, @user) ->\n      position.positionPopupAtPoint(evt.clientX, evt.clientY, @el[0])\n      @el.show()\n      \n    edit: (e) ->\n      @log(\"edit User<#{@user.id}>\")\n\n      e.preventDefault()\n\n      @delay -> @navigate('/user', @user.id, 'edit')\n      \n      @trigger 'edit', @user\n\n    purge: (e) ->\n      @log(\"purge User<#{@user.id}>\")\n\n      e.preventDefault()\n      \n      @trigger 'purge', @user\n\n    suspend: (e) ->\n      @log(\"suspend User<#{@user.id}>\")\n\n      e.preventDefault()\n      \n      @trigger 'suspend', @user          \n\n  # For viewing a user in the table\n  class @Row extends Spine.Controller\n\n    @Events:\n      'click'           : 'clicked'   \n      'click .select'   : 'select'\n      'contextmenu'     : 'contextmenu'   \n\n    constructor: ->\n      super\n\n      @selMgr.on \"selectionChanged_#{@user.cid}\", @selectionChanged\n      @listenTo @user, 'change', @FillData\n\n      @on 'release', => \n        @selMgr.off \"selectionChanged_#{@user.cid}\", @selectionChanged\n\n      @FillData()\n\n    DelegateEvents: ->\n      @delegateEvents(Row.Events)\n\n    FillData: ->\n\n      @el.toggleClass 'selected', @selMgr.isSelected(@user)\n      \n      @$('.fullName').html(@user.fullName())\n      @$('.primaryEmail').html(@user.primaryEmail)\n\n      @el\n\n    contextmenu: (e) ->\n      e.stopPropagation()\n      e.preventDefault()\n\n      @trigger 'contextmenu', e, @user      \n\n    selectionChanged: (selected) => \n      @el.toggleClass 'selected', selected\n\n    clicked: (evt) ->\n      evt.stopPropagation()\n\n      @delay -> @navigate('/user', @user.id)\n\n    Off: (fn) ->\n      @selMgr.off \"selectionChanged_#{@user.cid}\", @selectionChanged\n      do fn\n      @selMgr.on \"selectionChanged_#{@user.cid}\", @selectionChanged  \n    \n    select: (evt) ->\n      evt.stopPropagation()\n\n      @Off =>\n\n        if @el.hasClass('selected')    \n          @selMgr.removed(@user)\n        else\n          @selMgr.selected(@user)\n\n      @el.toggleClass 'selected'\n\n  # Actions to perform on all users or selected user(s)\n  class @Toolbar extends Spine.Controller\n\n    @elements:\n      '.select'                     : 'checkbox'\n      '.labels-menu'                : 'labelsElement'\n      '.next'                       : 'next'\n      '.prev'                       : 'prev'\n      '.select-toggle-wrapper'      : 'selectToggle'\n\n    @Events:\n      'click .select'     : 'ToggleSelection'\n      'click .new'        : 'New'\n      'click .refresh'    : 'refresh'\n      'click .purge'      : 'purge'    \n      'click .next'       : 'Next'    \n      'click .prev'       : 'Prev'\n\n    allSelected: no\n\n    class @SelectMenu extends Spine.Controller\n\n      events:\n        'click a' : 'select'\n\n      constructor: ->\n        super\n\n      select: (e) ->\n        e.preventDefault()\n\n        @trigger 'select', @$(e.target).attr('data-state')\n\n    constructor: ->\n      super   \n\n      @selMgr.on 'selectionChanged', @selectionChanged\n\n      @bind 'release', =>\n        @selMgr.off 'selectionChanged', @selectionChanged\n\n      new Toolbar.Tags(el: @labelsElement, mgr: @)\n\n      @delegateEvents(Toolbar.Events)\n\n      (new Toolbar.SelectMenu(el: @$('.selection-menu'))).on 'select', (state) => @mgr.list.trigger 'select', state\n\n      @selectToggle.dropdown()\n                   .closest('#users-select').on 'show.bs.dropdown', => \n                      @delay (-> @selectToggle.closest('button.select').tooltip('hide')), 10\n\n    selectionChanged: => \n      @el.toggleClass 'has-selection', @selMgr.hasSelection()\n      @el.toggleClass 'all', wholePage = @selMgr.isWholePageSelected()\n\n      @allSelected = yes if wholePage\n\n    Off: (fn) ->\n      @selMgr.off 'selectionChanged', @selectionChanged\n      do fn\n      @selMgr.on 'selectionChanged', @selectionChanged \n\n    ToggleSelection: ->\n\n      @el.toggleClass 'has-selection', @allSelected = not @allSelected\n      @el.toggleClass 'all', @allSelected\n\n      @Off =>\n        @mgr.list.Off =>\n          @selMgr.trigger 'toggle-selection', if @allSelected then List.SELECT_ALL else List.SELECT_NONE\n\n      @mgr.list.trigger 'page-selected'\n\n    page: (start, end, total) ->\n      if total > UserM.MaxResults # show paging only if necessary\n        \n        @next.prop('disabled', end is total - 1)\n        @prev.prop('disabled', start is 0)\n\n        @$('.start').html(start + 1)\n        @$('.end').html(\"#{end + 1}&nbsp;\")\n        @$('.count').html(\"#{numeral(total).format()} &nbsp;\")\n\n      @el.toggleClass 'needs-paging', total > UserM.MaxResults\n      @el.toggleClass 'empty', total is 0\n    \n    New: ->\n      @delay -> @navigate('/users/new')\n\n    refresh: ->\n      return if @selMgr.hasSelection()\n\n      @delay ->\n      \n        switch @mgr.state\n            when List.ALL         then app.modules['admin'].menu(app.modules['admin'].USERS, (item) -> item.loading())\n            when List.OWN         then app.modules['admin'].menu(app.modules['admin'].USERS_CREATED_BY_ME, (item) -> item.loading())\n            when List.ACTIVE      then app.modules['admin'].menu(app.modules['admin'].USERS_ACTIVE, (item) -> item.loading())\n            when List.SUSPENDED   then app.modules['admin'].menu(app.modules['admin'].USERS_SUSPENDED, (item) -> item.loading())\n            when List.LABELLED    then app.modules['admin'].menu(app.modules['admin'].USERS, (item) -> item.loading())\n        \n        UserM.Reload()\n    \n    purge: ->\n      @log 'List toolbar.purge'       \n    \n    Next: -> \n      @trigger 'next'         \n    \n    Prev: -> \n      @trigger 'prev'\n\n    getSelectedUsers: -> @selMgr.getSelection()     \n\n    class @Tags extends Spine.Controller\n\n      @elements:\n        '.labels-list'  : 'list'\n        'input'         : 'search'\n\n      @events:\n        'click .new-label'      : 'NewLabel'\n        'click .manage-labels'  : 'MngLabels'\n        'click .apply-labels'   : 'ApplyUserLabels'\n        'click input'           : (e) -> e.stopPropagation()\n        'input input'           : 'Refresh'\n\n      @form: new LabelForm\n\n      @labelTmpl: require('js/views/admin/user/label')\n\n      class @Tag extends Spine.Controller\n\n        @events:\n          'click'  : 'ToggleUserLabel'          \n\n        constructor: ->\n          super\n\n          @selMgr.on \"selectionChanged_#{@label.cid}\", @selectionChanged          \n\n        selectionChanged: (isSelected) =>\n          @el.toggleClass 'selected', isSelected\n\n        ToggleUserLabel: (e) =>\n          e.preventDefault()\n          e.stopPropagation()\n\n          @selMgr.toggle(@label)\n\n      constructor: ->\n        super\n\n        @selMgr = new SelectionMgr\n\n        @el.on 'show.bs.dropdown', @onShow\n\n        Tags.form.on 'save', @SaveTag\n\n        @selMgr.on 'selectionChanged', =>\n          @el.toggleClass 'labels-selected', not app.arraysEqual(@selMgr.getSelection(), @initiallySelectedLabels)\n\n      Refresh: =>\n        @labels[lastIndex - 1].release() while lastIndex = @labels.length\n\n        q = app.cleaned @search        \n\n        if q is ''\n  \n          for label in TagM.all()      \n            @list.append @add(new Tags.Tag({label, @selMgr, el: Tags.labelTmpl({name:label.name})})).el          \n\n        else\n\n          for label in TagM.all() when label.name.match(new RegExp(\"^(.*)(#{q})(.*)$\"))\n          \n            name = label.name.replace(\n              new RegExp(\"^(.*)(#{q})(.*)$\"), \n              (name, $1, $2, $3) -> if !!$2 then \"#{$1}<cite class='q'>#{$2}</cite>#{$3}\" else name\n            )\n\n            @list.append @add(new Tags.Tag({label, @selMgr, el: Tags.labelTmpl({name})})).el\n\n        @delay -> @selMgr.setSelection(@initiallySelectedLabels = @getSelection())\n\n      getSelection: =>    \n        selectedLabels = []\n\n        for _, labels of @getSelectionMap()\n          selectedLabels = [].concat.apply(selectedLabels, labels)\n\n        selectedLabels\n\n      getSelectionMap: =>    \n        selectionMap = {}\n        selectedUsers = (user.id for user in @mgr.getSelectedUsers())\n\n        for id in selectedUsers\n          selectionMap[id] or= [] \n          selectionMap[id].push UserTagM.getUserTags(id)\n\n        selectionMap\n\n      labels: []      \n\n      add: (label) ->\n        index = @labels.push(label)\n\n        label.on 'release', =>\n          @labels.splice(index - 1, 1)\n\n        label\n\n      onShow: =>\n        TagM.Reload().done @Refresh      \n\n      NewLabel: (e) ->\n        e.preventDefault()\n\n        @delay -> Tags.form.New()\n\n      MngLabels: (e) ->\n        e.preventDefault()\n\n        @delay -> @navigate('/labels')\n\n      ApplyUserLabels: (e) ->\n        e.preventDefault()\n\n        ;\n\n      SaveTag: (info) ->\n        ;\n    \nclass User.Stack extends Spine.Stack\n\n  logPrefix: '(User.Stack)'\n\n  className: 'spine stack users'\n\n  controllers:\n    list    : User.List\n    single  : User.Single\n    form    : User.Form\n\n  constructor: ->\n\n    @routes = {      \n      '/users'                     : => @list.active(User.List.ALL)\n      '/labelled/users/:label'     : (params) => @list.active(User.List.LABELLED, params.label)\n      '/users-:state'              : (params) => @list.active(params.state)\n      '/user/:id'                  : (params) => @single.active(params.id)\n    }\n\n    super\n\nmodule.exports = User","\nR = adminRoutes.controllers.admin.Users\n\nclass users\n\n  @getUser: (id) ->\n    $.getJSON R.getUser(id).url\n\n  @getUsersStats: ->\n    $.getJSON R.getUsersStats().url\n\n  @getUsers: (page=0) ->\n    $.getJSON R.getUsers(page).url\n\n  @getUserRoles: (id) ->\n    $.getJSON R.getUserRoles(id).url\n\n  @saveUser: (spec) ->\n    route = R.addUser()\n    $.ajax(\n      type: route.type\n      url:  route.url\n      dataType: 'json',\n      contentType: 'application/json; charset=UTF-8'\n      data: JSON.stringify(spec)\n    )    \n\n  @updateUser: (id, spec) ->\n    route = R.updateUser(id)\n    $.ajax(\n      type: route.type\n      url:  route.url\n      dataType: 'json',\n      contentType: 'application/json; charset=UTF-8'\n      data: JSON.stringify(spec)\n    )    \n\n  @removeUsers: (users) ->\n    route = R.deleteUsers(users)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )    \n\n  @purgeUsers: (users) ->\n    route = R.purgeUsers(users)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )\n\n  @undeleteUsers: (users) ->\n    route = R.undeleteUsers(users)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )\n\n  @changePasswd: (id, newPasswd, oldPassword) ->\n    route = R.changePasswd(id)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n      contentType: 'application/json; charset=UTF-8'\n      data: JSON.stringify({password: newPasswd, old_password: oldPassword})\n    )    \n\n  @setAddress: (id, spec) ->\n    route = R.updateUser(id)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n      contentType: 'application/json; charset=UTF-8'\n      data: JSON.stringify(spec)\n    )        \n\n  @remHomeAddress: (id) ->\n    route = R.updateUser(id)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n      contentType: 'application/json; charset=UTF-8'\n      data: JSON.stringify({homeAddress: {}})\n    )\n\n  @remWorkAddress: (id) ->\n    route = R.updateUser(id)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n      contentType: 'application/json; charset=UTF-8'\n      data: JSON.stringify({workAddress: {}})\n    )    \n\n  @updateContacts: (id, contacts) ->\n    route = R.updateUser(id)\n    $.ajax(\n      type: route.type\n      url: route.url\n      contentType: 'application/json; charset=UTF-8'\n      dataType: 'json'\n      data: JSON.stringify({contacts})\n    )       \n\n  @grantRoles: (id, roles) ->\n    route = R.grantUserRoles(id, roles)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )\n\n  @revokeRoles: (id, roles) ->\n    route = R.revokeUserRoles(id, roles)\n    $.ajax(\n      type: route.type,\n      url: route.url\n      dataType: 'json'\n    )    \n\n  @purgeAvatar: (id, avatarId) ->\n    route = R.purgeAvatar(id, avatarId)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )     \n\n  @downloadAvatar: (avatarId) ->\n    $.getJSON R.downloadAvatar(avatarId).url\n\n  @uploadAvatar: (id, file) ->\n\n    sendFile = ({type, url, file}) ->      \n      $.ajax(\n        type: type\n        url: url\n        data: file,\n        success: ->\n          # do something\n          console.log(\"success\")\n        xhrFields:\n          # add listener to XMLHTTPRequest object directly for progress (jquery doesn't have this yet)\n          onprogress: (progress) -> \n            # calculate upload progress\n            percentage = Math.floor((progress.total / progress.totalSize) * 100)\n            # log upload progress to console\n            console.log('progress', percentage)\n            if percentage is 100 \n              console.log('DONE!')\n        processData: false\n        contentType: file.type\n        dataType: 'json'\n      )  \n\n    {type, url} = R.uploadAvatar(id, file.name)\n    sendFile({type, url, file})\n\n  @getUserRoles: (id) ->\n    $.getJSON R.getUserRoles(id).url\n\n  @userExists: (username) ->\n    $.getJSON R.userExists(username).url\n\n  @getUsersInTrash: ->\n    $.getJSON R.getPurgedUsers().url\n\n  @labelUser: (id, labels) ->\n    route = R.addUserTags(id, labels)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )\n\n  @unLabelUser: (id, labels) ->\n    route = R.purgeUserTags(id, labels)\n    $.ajax(\n      type: route.type\n      url: route.url\n      dataType: 'json'\n    )\n\n  @getUserLabels: (id) ->\n    $.getJSON R.getUserTags(id).url\n\nmodule.exports = users","\nclass User extends Spine.Model\n\n  @MaxResults: 50\n\n  @configure 'User', \n    'id', \n    'primaryEmail', \n    'givenName', \n    'familyName', \n    'gender', \n    'homeAddress', \n    'workAddress', \n    'contacts', \n    'avatar', \n    'lastLoginTime', \n    'createdAt', \n    'createdBy', \n    'lastModifiedAt', \n    'lastModifiedBy' \n    'suspended' \n\n  fullName: -> \"#{@givenName} #{@familyName}\"\n\n  @Reload: ->\n    \n    $.Deferred (deferred) =>\n\n      d = $.Deferred()\n\n      d.done (users) => \n        @refresh(users, clear: yes)\n        deferred.resolve @all()      \n  \n      app.modules['admin'].users.getUsersInTrash()\n               .done d.resolve\n             \nmodule.exports = User","\nclass User extends Spine.Model\n\n  @MaxResults: 50\n\n  @configure 'User', \n    'id', \n    'primaryEmail', \n    'givenName', \n    'familyName', \n    'gender', \n    'homeAddress', \n    'workAddress', \n    'contacts', \n    'avatar', \n    'lastLoginTime', \n    'createdAt', \n    'createdBy', \n    'lastModifiedAt', \n    'lastModifiedBy' \n    'suspended'\n\n  @comparator: (a, b) ->\n\n    if a.lastLoginTime\n\n      if b.lastLoginTime\n        \n        if (res = a.lastLoginTime - b.lastLoginTime) is 0\n\n          if a.lastModifiedAt\n\n            if b.lastModifiedAt\n              return a.lastModifiedAt - b.lastModifiedAt\n\n            return 1\n\n          return 1 if b.lastModifiedAt         \n\n          return a.createdAt - b.createdAt\n\n        else return res\n\n      return 1\n\n    return 1 if b.lastLoginTime\n\n    if a.lastModifiedAt\n\n      if b.lastModifiedAt\n        if (res = a.lastModifiedAt - b.lastModifiedAt) is 0\n          return a.createdAt - b.createdAt\n        else return res\n\n      return 1\n\n    return 1 if b.lastModifiedAt         \n\n    return a.createdAt - b.createdAt\n\n  fullName: -> \"#{@givenName} #{@familyName}\"\n\n  @Reload: ->\n\n    $.Deferred (d) =>\n  \n      users = []\n      completed = 0\n\n      app.modules['admin'].users.getUsersStats()\n         .done ({'count': count}) =>\n\n            PAGES = Math.ceil(count / @MaxResults)\n\n            if PAGES is 0\n              @refresh([], clear: yes)\n              d.resolve @all()\n              return\n\n            $.Deferred (deferred) =>\n\n              deferred.progress (us) =>              \n                users = [].concat.apply(users, us)\n\n                deferred.resolve(users) if ++completed is PAGES\n\n              deferred.done (us) =>\n               @refresh(us, clear: yes)\n\n              LoadPage = (index) ->\n                app.modules['admin'].users.getUsers(index)\n                   .done deferred.notify\n\n              LoadPage(i) for i in [0...PAGES] by 1\n\n  @countUsersOf: (id) =>\n\n    byHim = =>\n      @select (user) ->\n        user.createdBy is id\n\n    byHim().length\n\n  @countSuspended: =>\n\n    suspended = =>\n      @select (user) -> \n        user.suspended\n\n    suspended().length    \n\n  @countActive: =>\n\n    active = =>\n      @select (user) -> \n        not user.suspended\n\n    active().length        \n\n  @Defaults: {\n    primaryEmail: '', \n    givenName: '', \n    familyName: '', \n    gender: 'Male',\n    homeAddress: {city: window['sGeobytesCity'], country: window['sGeobytesIso2']},\n    workAddress: {city: window['sGeobytesCity'], country: window['sGeobytesIso2']}\n  }\n  \nmodule.exports = User","UserTag = require('models/admin/UserTag')\n\nclass UserTag extends Spine.Model\n\n  @configure 'UserTag', 'label', 'userId'\n\n  @Reload: ->\n\n    $.Deferred (deferred) =>\n\n      d = $.Deferred()\n\n      d.done (userTags) => \n        @refresh(userTags, clear: yes)\n        deferred.resolve @all()  \n\n      app.labels.getLabels()\n         .done d.resolve\n\n  @getUserTags: (userId) ->\n    UserTag.select (userTag) => userTag.userId is userId\n  \nmodule.exports = UserTag","!function(e){if(\"object\"==typeof exports)module.exports=e();else if(\"function\"==typeof define&&define.amd)define(e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.jade=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);throw new Error(\"Cannot find module '\"+o+\"'\")}var f=n[o]={exports:{}};t[o][0].call(f.exports,function(e){var n=t[o][1][e];return s(n?n:e)},f,f.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n'use strict';\n\n/**\n * Merge two attribute objects giving precedence\n * to values in object `b`. Classes are special-cased\n * allowing for arrays and merging/joining appropriately\n * resulting in a string.\n *\n * @param {Object} a\n * @param {Object} b\n * @return {Object} a\n * @api private\n */\n\nexports.merge = function merge(a, b) {\n  if (arguments.length === 1) {\n    var attrs = a[0];\n    for (var i = 1; i < a.length; i++) {\n      attrs = merge(attrs, a[i]);\n    }\n    return attrs;\n  }\n  var ac = a['class'];\n  var bc = b['class'];\n\n  if (ac || bc) {\n    ac = ac || [];\n    bc = bc || [];\n    if (!Array.isArray(ac)) ac = [ac];\n    if (!Array.isArray(bc)) bc = [bc];\n    a['class'] = ac.concat(bc).filter(nulls);\n  }\n\n  for (var key in b) {\n    if (key != 'class') {\n      a[key] = b[key];\n    }\n  }\n\n  return a;\n};\n\n/**\n * Filter null `val`s.\n *\n * @param {*} val\n * @return {Boolean}\n * @api private\n */\n\nfunction nulls(val) {\n  return val != null && val !== '';\n}\n\n/**\n * join array as classes.\n *\n * @param {*} val\n * @return {String}\n */\nexports.joinClasses = joinClasses;\nfunction joinClasses(val) {\n  return Array.isArray(val) ? val.map(joinClasses).filter(nulls).join(' ') : val;\n}\n\n/**\n * Render the given classes.\n *\n * @param {Array} classes\n * @param {Array.<Boolean>} escaped\n * @return {String}\n */\nexports.cls = function cls(classes, escaped) {\n  var buf = [];\n  for (var i = 0; i < classes.length; i++) {\n    if (escaped && escaped[i]) {\n      buf.push(exports.escape(joinClasses([classes[i]])));\n    } else {\n      buf.push(joinClasses(classes[i]));\n    }\n  }\n  var text = joinClasses(buf);\n  if (text.length) {\n    return ' class=\"' + text + '\"';\n  } else {\n    return '';\n  }\n};\n\n/**\n * Render the given attribute.\n *\n * @param {String} key\n * @param {String} val\n * @param {Boolean} escaped\n * @param {Boolean} terse\n * @return {String}\n */\nexports.attr = function attr(key, val, escaped, terse) {\n  if ('boolean' == typeof val || null == val) {\n    if (val) {\n      return ' ' + (terse ? key : key + '=\"' + key + '\"');\n    } else {\n      return '';\n    }\n  } else if (0 == key.indexOf('data') && 'string' != typeof val) {\n    return ' ' + key + \"='\" + JSON.stringify(val).replace(/'/g, '&apos;') + \"'\";\n  } else if (escaped) {\n    return ' ' + key + '=\"' + exports.escape(val) + '\"';\n  } else {\n    return ' ' + key + '=\"' + val + '\"';\n  }\n};\n\n/**\n * Render the given attributes object.\n *\n * @param {Object} obj\n * @param {Object} escaped\n * @return {String}\n */\nexports.attrs = function attrs(obj, terse){\n  var buf = [];\n\n  var keys = Object.keys(obj);\n\n  if (keys.length) {\n    for (var i = 0; i < keys.length; ++i) {\n      var key = keys[i]\n        , val = obj[key];\n\n      if ('class' == key) {\n        if (val = joinClasses(val)) {\n          buf.push(' ' + key + '=\"' + val + '\"');\n        }\n      } else {\n        buf.push(exports.attr(key, val, false, terse));\n      }\n    }\n  }\n\n  return buf.join('');\n};\n\n/**\n * Escape the given string of `html`.\n *\n * @param {String} html\n * @return {String}\n * @api private\n */\n\nexports.escape = function escape(html){\n  var result = String(html)\n    .replace(/&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;');\n  if (result === '' + html) return html;\n  else return result;\n};\n\n/**\n * Re-throw the given `err` in context to the\n * the jade in `filename` at the given `lineno`.\n *\n * @param {Error} err\n * @param {String} filename\n * @param {String} lineno\n * @api private\n */\n\nexports.rethrow = function rethrow(err, filename, lineno, str){\n  if (!(err instanceof Error)) throw err;\n  if ((typeof window != 'undefined' || !filename) && !str) {\n    err.message += ' on line ' + lineno;\n    throw err;\n  }\n  try {\n    str =  str || require('fs').readFileSync(filename, 'utf8')\n  } catch (ex) {\n    rethrow(err, null, lineno)\n  }\n  var context = 3\n    , lines = str.split('\\n')\n    , start = Math.max(lineno - context, 0)\n    , end = Math.min(lines.length, lineno + context);\n\n  // Error context\n  var context = lines.slice(start, end).map(function(line, i){\n    var curr = i + start + 1;\n    return (curr == lineno ? '  > ' : '    ')\n      + curr\n      + '| '\n      + line;\n  }).join('\\n');\n\n  // Alter exception message\n  err.path = filename;\n  err.message = (filename || 'Jade') + ':' + lineno\n    + '\\n' + context + '\\n\\n' + err.message;\n  throw err;\n};\n\n},{\"fs\":2}],2:[function(require,module,exports){\n\n},{}]},{},[1])\n(1)\n});"]}